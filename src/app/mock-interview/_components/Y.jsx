/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 public\models\Y.glb 
*/

import React, { useEffect, useState } from 'react'
import { useFrame, useGraph, useThree } from '@react-three/fiber'
import { useGLTF, useAnimations, useFBX } from '@react-three/drei'
import { SkeletonUtils } from 'three-stdlib'

export function YBot({ currentAnimation = "idle", ...props }) {
  const group = React.useRef()
  const { scene } = useGLTF('/models/Y2.glb')
  const { animations } = useGLTF('/animations/all-animations.glb')
  const clone = React.useMemo(() => SkeletonUtils.clone(scene), [scene])
  const { nodes, materials } = useGraph(clone)

  const [prevAnimation, setPrevAnimation] = useState(null)

  const { actions } = useAnimations(animations, group)
  const head = nodes.mixamorigHead
  const { camera } = useThree()

  useFrame(() => {
    if (head) {
      head.lookAt(camera.position)
    }
  })
  useEffect(() => {
    if (!actions) return
    // Fade out previous animation
    if (prevAnimation && actions[prevAnimation]) {
      actions[prevAnimation].fadeOut(0.5)
    }
    // Fade in new animation
    if (actions[currentAnimation]) {
      actions[currentAnimation].reset().fadeIn(0.5).play()
    }
    setPrevAnimation(currentAnimation)
    return () => {
      if (actions[currentAnimation]) {
        actions[currentAnimation].fadeOut(0.5)
      }
    }
  }, [actions, currentAnimation])


  const animationPositions = {
    idle: [0, -7.5, -3],
    talk: [-0.35, -7.5, -2.5],
    talk2: [0, -7.5, -1.5],
    clap: [0, -7.5, -3],
    // Add more animations with their corresponding positions
    wave: [0, -7.5, -1.5],
    thinking: [0, -7.0, -1.5],
    excited: [0, -7.5, -1.2],
    pointing: [0, -7.5, -1.5],
    // You can customize these positions for each animation
  }

  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene" position={[0, 0, 0]} >
        <group name="Armature" position={animationPositions[currentAnimation]} rotation={[1.5, 0, 0]} scale={0.05}>
          <primitive object={nodes.mixamorigHips} />
          <skinnedMesh name="Alpha_Joints" geometry={nodes.Alpha_Joints.geometry} material={materials.Alpha_Joints_MAT} skeleton={nodes.Alpha_Joints.skeleton} />
          <skinnedMesh name="Alpha_Surface" geometry={nodes.Alpha_Surface.geometry} material={materials.Alpha_Body_MAT} skeleton={nodes.Alpha_Surface.skeleton} />
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/models/Y2.glb')
